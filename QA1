1.简述C、ASM、ML的关系，各自优缺点？
  机器语言是二进制数据表示的语言，机器可以直接识别；汇编语言是与机器指令一一对应的助记符,是一种低级语言,经过汇编和链接之后机器可以运行；C语言在低级语言的基础上，采用最接近人类自然语言的单词和符号来表示一组低级语言程序。

  C语言的优点：提供了结构化程序设计的环境和工具，设计出来的程序可读性好，可维护性强，可靠性高；抽象程度高，远离机器语言，和计算机硬件关系不大，编程门槛低，无需懂计算机原理和计算机结构；编写出来的程序可移植性好，重用率高
  缺点：相对汇编语言和机器语言来说执行效率不高

  汇编语言的优点：能发挥计算机的特定和功能，程序紧凑，资源利用率高
  缺点：代码可读性较差，难以维护；特定的汇编语言和特定的机器语言指令集一一对应，只能针对特定体系结构和处理器进行优化,可移植性差；开发效率低,时间长且单调；编程门槛高，需要了解计算机原理和计算机结构

  机器语言优点:能利用机器指令精准的描述算法,编程质量高；所占用储存空间小；执行速度快
  缺点:开发过程细节繁琐，编程门槛高；可读性差,不便于交流；严重依赖具体的计算机,可移植性差,重用性差。
2.Hello.c 经过那些工具、步骤、生成什么类型的文件？
  
3.什么是程序可移植性？汇编语言可移植吗？为什么？
  程序可移植性指在不同环境下，其是够具备可以被重复使用的性质。在移植到不同的系统平台使，所做的改动少，则可移植性好；否则，可移植性差。
  汇编语言可移植性差。
  原因：汇编语言是机器语言的主机语言，针对特定的指令系统，和特定的机器指令集一一对应；程序结构性差，不便于模块化的设计，也造成可移植性差

4.编译与解释有什么区别？各举出2个语言的例子
  编译程序是将高级语言程序转换为机器级目标程序，执行时只需要启动目标程序即可，如将C、C++编译为Windows上的可执行2进制文件。
  解释是将高级语言语句逐条翻译成机器指令并立即执行，不生成目标文件，例如Java需要目标机器上安装JRE。
5.程序优化的目的？
  1.提高程序运行效率（性能）
  2.使程序更加节省存储空间和运行空间
  3.程序更加正确
  4.更可靠
  5.可移植性更好
  6.功能更强大
  7.使用更方便
  8.格式符合编程规范，接口规范
  9.更易懂（能读明白，有注释，模块化）
  10.更美

7.计算机软件与硬件的界面/接口是什么？
  操作系统内核是应用程序和硬件之间的媒介。它提供三个基本的抽象：
    1.文件是对I/O设备的抽象
    2.虚拟内存是对主存和磁盘的抽象
    3.进程是处理器、主存和I/O设备的抽象

8.简述中间层语言及其运行机制（这个应该不会考吧，没找到答案，下面这段随便看看吧）
      因为很多程序只能在一种操作系统上运行。在其他操作系统上不能运行。那怎么能够支持多重硬件平台、多种软件平台（包括操作系统）呢？这就要用到一种新的技术——中间层语言，微软有自己的中间层语言，Java也有（叫Java字节码），凡是微软的语言比如C、C++，在运行时都要先编译成MSIL（中间层语言)，然后通过微软的通用语言运行时（Common Language Runtime）来运行，而Java语言在编译成Java字节码之后要在Java虚拟机上运行，Java虚拟机通过通用语言运行时对生成的中间层代码进行解释。这样程序的可移植性就有了提高。因此我们一般编程只需面对中间层预言、虚拟机即可，这是计算机系统抽象表示的发展趋势
  在编译器将源代码编译为目的码的过程中，会先将源代码转换为一个或多个的中间表述，以方便编译器进行最佳化，并产生出目的机器的机器语言。通常，中间语言的设计与一般的机器语言有三个不同之处：
  每个指令代表仅有一个基本的操作。举例来说，在微处理器中出现的shift-add定址模式在中间语言不会出现。
  指令集内可能不会包含控制流程的资讯。
  暂存器可用的数量可能会很大，甚至没有限制。
  最常见的中间语言表述形式，是三位址码（Three address code）。
  这个术语也同时用来代称一些作为中间层的语言，有些高级语言不会输出为机器语言，它们仅会输出这种中间语言，而这些中间语言则会像一般语言一样，提交给编译器，编译为机器语言。这通常被用于让最佳化的过程更简单，也用于增进可移植性的能力，改进移植的方式则是利用中间语言的编译器，可以编译出许多中央处理器及操作系统可使用的机器码，例如C语言。中间语言的复杂度，通常介于高阶语言及低级语言之间，例如汇编语言。

9.设计开发一个Java处理器是否可行？
  查不到
  https://blog.csdn.net/zxadcsdn/article/details/86409600
  这篇博客画了一个java处理器的图
10.可执行程序的组织与其在内存的一致吗？变量地址呢？

11.程序执行结果与那些相关呢？程序编写、语言处理系统、OS、ISA-机器语言、微体系结构等
    程序执行结果不仅取决于算法、程序编写，而且取决于语言处理系统、操作系统、ISA、微体系结构。
